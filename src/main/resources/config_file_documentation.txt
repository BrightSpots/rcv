This document lists the parameters that can be included in a config file suitable for input tabulation.
Config file must be valid JSON format. Examples can be found under the test folder.

  "outputSettings" required
    list of output settings and their associated parameters
    the "outputSettings" section contains the following parameters:

      "contestName" required
        the name of the contest
        used for naming output files (visualizer and audit)
        example: "Portland Mayoral Race 2017"
        value: text string of length [1..1000]

      "outputDirectory" optional
        directory for visualizer and audit output files (absolute or relative path)
        example: /Path/To/TabulatorResults
        example: output_data/contest1
        value: string of length [1..1000]
        if not supplied: files will be saved to the current working directory

      "contestDate" optional
        date of the contest
        used for visualizer output only (not used in tabulation)
        example: "2015-11-03"
        value: text string of length [1..1000]
        if not supplied: none

      "contestJurisdiction" optional
        text description of the jurisdiction of this contest
        used for visualizer output only (not used in tabulation)
        example: "Portland, ME"
        value: text string of length [1..1000]
        if not supplied: none

      "contestOffice" optional
        text description of the office being contested
        used for visualizer output only (not used in tabulation)
        example: "Mayor"
        value: text string of length [1..1000]
        if not supplied: none

      "tabulateByPrecinct" optional
        tabulator will generate a results spreadsheet for each precinct
        value: true | false
        if not supplied: false

  "cvrFileSources" required
    list of input CVR file paths and their associated parameters
    each "cvrFileSources" list item contains the following parameters:

      "filePath" required
        location of the CVR file
        example: /Users/test_data/2015-portland-mayor-cvr.xlsx
        value: string of length [1..1000]

      "firstVoteColumnIndex" required
        index of the column (starting from 1) that contains the top-ranked candidate for each CVR
        example: 3
        value: [1..1000]

      "firstVoteRowIndex" required
        index of the row (starting from 1) that contains the rankings for the first CVR
        example: 2
        value: [1..1000]

      "idColumnIndex" optional
        index of the column (starting from 1) that contains the unique ID for each CVR
        example: 1
        value: [1..1000]
        if not supplied: none

      "precinctColumnIndex" required if "tabulateByPrecinct" is in use
        index of the column (starting from 1) that contains the precinct name for each CVR
        example: 2
        value: [1..1000]
        if not supplied: none

      "provider" optional
        text description of the vendor / machine which generated this file -- not used by the tabulator
        example: "ES&S"
        value: text string of length [1..1000]
        if not supplied: none

  "candidates" required
    list of registered candidate names and associated candidate code
    each "candidates" list item has the following parameters:

    "name" required
      full name of the registered candidate
      example: "Duson, Jill C."
      value: string of length [1..1000]

    "code" optional
      candidate code which may appear in CVRs in lieu of full candidate name
      example: "JCD"
      value: string of length [1..1000]
      if not supplied: none

    "excluded" optional
      candidate should be ignored during tabulation
      value: true | false
      if not supplied: false

  "rules" required
    set of configuration parameters that specify the tabulation rules
    the "rules" section contains the following parameters:

      "tiebreakMode" required
        how the program should decide which candidate to eliminate when multiple candidates are tied for last place among continuing candidates in a given round
        value: "random" | "interactive" | "previousRoundCountsThenRandom" | "previousRoundCountsThenInteractive" | "usePermutationInConfig" | "generatePermutation"

      "overvoteRule" required
        how the program should handle an overvote when it encounters one
        value: "alwaysSkipToNextRank" | "exhaustImmediately" | "exhaustIfMultipleContinuing"

      "maxRankingsAllowed" optional
        maximum number of candidates that a ballot is allowed to rank
        example: 15
        values: [1..]
        if not supplied: the number of declared candidates

      "maxSkippedRanksAllowed" optional
        maximum number of skipped ranks (undervotes) on a ballot before the ballot should be considered exhausted
        example: 1
        value: [0..]
        if not supplied: unlimited

      "numberOfWinners" required
        the number of seats to be won in this contest
        note: we use fractional vote transfer to redistribute votes in multi-seat contests
        value: [1..number of declared candidates]

      "decimalPlacesForVoteArithmetic" required
        number of rounding decimal places when computing winning thresholds and fractional vote transfers
        value: [0..20]

      "nonIntegerWinningThreshold" optional
        the vote threshold used to determine winners can be a non-integer
        if true, threshold = V/(S+1) + 10^-d
        if false, threshold = floor(V/(S+1)) + 1
        where V = total number of votes (in the current round for single-seat or in the first round for multi-seat); S = numberOfWinners; and d = decimalPlacesForVoteArithmetic
        value: true | false
        if not supplied: false

      "minimumVoteThreshold" required
        the minimum number of votes a candidate must receive in the first round to avoid automatic elimination
        example: 150
        value: [0..1000000]

      "batchElimination" optional
        tabulator will use batch elimination (only valid for single-winner contests)
        value: true | false
        if not supplied: false

      "continueUntilTwoCandidatesRemain" optional
        tabulator will keep tabulating (beyond winning round) until only two candidates remain (only valid for single-winner contests)
        value: true | false
        if not supplied: false

      "exhaustOnDuplicateCandidate" optional
        tabulator will exhaust a ballot when it encounters a duplicate candidate (instead of just skipping the duplicate)
        value: true | false
        if not supplied: false

      "treatBlankAsUndeclaredWriteIn" optional
        tabulator will interpret a blank cell in a CVR as a vote for an undeclared write-in
        value: true | false
        if not supplied: false

      "overvoteLabel" optional
        label used in the CVR to denote an overvote; if this parameter is present overvoteRule must be either "alwaysSkipToNextRank" or "exhaustImmediately" (because the other option, exhaustIfMultipleContinuing, relies on knowing which specific candidates were involved in each overvote)
        example: "OVERVOTE"
        value: string of length [1..1000]
        if not supplied: none

      "undervoteLabel" optional
        the special label used in the cast vote records to denote an undervote
        example: "UNDERVOTE"
        value: string of length [1..1000]
        if not supplied: none

      "undeclaredWriteInLabel" optional
        the special label used in the cast vote records to denote a vote for an undeclared write-in
        example: "UWI"
        value: string of length [1..1000]
        if not supplied: none

      "rulesDescription" optional
        text description of this rules configuration for organizing your config files -- not used by the tabulator
        Example "Maine Rules"
        value: string of length [1..1000]
        if not supplied: none
