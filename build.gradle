plugins {
    id "application"
    id "checkstyle"
    id "idea"
    id "java-library"
    id "org.openjfx.javafxplugin" version "0.0.10"
    id "org.beryx.jlink" version "2.20.0"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.apache.commons:commons-csv:1.8"
    implementation "org.apache.poi:poi-ooxml:4.1.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
}

// ### Application plugin settings
application {
    mainClass = "${moduleName}.Main"
}

// Uncomment below to simulate running from the CLI
//run {
//    standardInput = System.in
//    args = ["-cli", "path/to/config"]
//}

// ### Checkstyle plugin settings
checkstyle {
    toolVersion = "8.36.2"
    // Keep the below file updated along with subsequent versions of Checkstyle (make sure to choose
    // the tag matching the toolVersion above):
    // https://github.com/checkstyle/checkstyle/blob/checkstyle-8.36.2/src/main/resources/google_checks.xml
    configFile = file("$projectDir/config/checkstyle/google_checks.xml")
}
System.setProperty( "org.checkstyle.google.suppressionfilter.config",
        "$projectDir/config/checkstyle/checkstyle-suppressions.xml")

// ### Idea plugin settings
idea {
    module {
        outputDir = file("out/production/classes")
    }
}

// ### Java plugin settings
sourceCompatibility = JavaVersion.VERSION_17

compileJava.dependsOn(clean)
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    moduleOptions {
        addExports = ["org.junit.platform.commons/org.junit.platform.commons.util": "ALL-UNNAMED",
                      "org.junit.platform.commons/org.junit.platform.commons.logging": "ALL-UNNAMED"]
    }
    maxHeapSize = "2056m"
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

// ### JavaFX plugin settings
javafx {
    version = "17"
    modules = ["javafx.base", "javafx.controls", "javafx.fxml", "javafx.graphics"]
}

def JLINK_DIR = "$buildDir/rcv"

// ### jlink plugin settings
jlink {
    imageDir = file(JLINK_DIR)
    imageZip = file(JLINK_DIR + ".zip")
    addOptions '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'
    mergedModule {
        requires "java.xml"
    }
    launcher {
        name = "rcv"
    }
}

def docsToCopy = copySpec {
    from("$projectDir") {
        include "README.md", "LICENSE", "config_file_documentation.txt"
    }
}

def sampleInputToCopy = copySpec {
    includeEmptyDirs = false
    from("$projectDir/src/test/resources/network/brightspots/rcv/test_data") {
        include "2015_portland_mayor/2015_portland_mayor_config.json"
        include "2015_portland_mayor/2015_portland_mayor_cvr.xlsx"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_sequential_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_cvr.xlsx"
        include "precinct_example/precinct_example_config.json"
        include "precinct_example/precinct_example_cvr.xlsx"
        include "dominion_cvr_conversion_alaska/*.json"
        exclude "output"
        exclude "**/*expected*"
    }
}

tasks.jlink.doLast {
    copy {
        with docsToCopy
        into JLINK_DIR + "/docs"
    }
    copy {
        with sampleInputToCopy
        into JLINK_DIR + "/sample_input"
    }
}
