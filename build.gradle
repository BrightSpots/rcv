plugins {
    id "application"
    id "checkstyle"
    // Latest version at: https://github.com/spotbugs/spotbugs-gradle-plugin/tags
    id "com.github.spotbugs" version "5.0.14"
    id "idea"
    id "java-library"
    // Latest version at: https://github.com/beryx/badass-jlink-plugin/tags
    id "org.beryx.jlink" version "2.26.0"
    // Latest version at: https://github.com/openjfx/javafx-gradle-plugin/tags
    id "org.openjfx.javafxplugin" version "0.0.14"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

// ### Application plugin settings
application {
    mainModule = "${moduleName}"
    mainClass = "${moduleName}.Main"
}

// Required to accept a name and tiebreak interactively via CLI
run {
    standardInput = System.in
    // Uncomment below line to quickly switch into CLI mode for development
//    args = ["--cli", "path/to/config"]
}

// ### Checkstyle plugin settings
checkstyle {
    // Latest version at https://github.com/checkstyle/checkstyle/tags
    toolVersion = '10.12.1'
    // Keep the below file updated along with subsequent versions of Checkstyle (make sure to choose
    // the tag matching the toolVersion above):
    // https://github.com/checkstyle/checkstyle/blob/checkstyle-10.3.2/src/main/resources/google_checks.xml
    // NOTE: After updating the local version of config/checkstyle/google_checks.xml again in the
    // future, it may be necessary to subsequently replace the following line in the local copy to
    // prevent suppressions from being ignored:
    // "${org.checkstyle.google.suppressionfilter.config}"
    // with:
    // "${config_loc}/checkstyle-suppressions.xml"
    // Additional context: https://github.com/gradle/gradle/issues/21409
    configFile = file("$projectDir/config/checkstyle/google_checks.xml")
    maxWarnings = 0
    ignoreFailures = false
}
System.setProperty("org.checkstyle.google.suppressionfilter.config",
        "$projectDir/config/checkstyle/checkstyle-suppressions.xml")

spotbugs {
    // Latest version at: https://github.com/spotbugs/spotbugs/tags
    toolVersion = '4.7.3'
    excludeFilter = file("config/spotbugs/exclude.xml")
}

// ### Idea plugin settings
idea {
    module {
        outputDir = file("out/production/classes")
    }
}

// ### Java plugin settings
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }
}

test {
    moduleOptions {
        addExports = [
                "org.junit.platform.commons/org.junit.platform.commons.util"   : "ALL-UNNAMED",
                "org.junit.platform.commons/org.junit.platform.commons.logging": "ALL-UNNAMED"
        ]
    }
    maxHeapSize = "2056m"
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

// ### JavaFX plugin settings
javafx {
    // Latest version here: https://gluonhq.com/products/javafx/
    version = "20.0.1"
    modules = ["javafx.base", "javafx.controls", "javafx.fxml", "javafx.graphics"]
}

def JLINK_DIR = "$buildDir/rcv"

// Comma-separated list of modules
// Necessary to explicitly include due to https://github.com/BrightSpots/rcv/issues/625
def MODULES_TO_ADD = "com.ctc.wstx"

// ### jlink plugin settings
jlink {
    imageDir = file(JLINK_DIR)
    imageZip = file(JLINK_DIR + ".zip")
    addOptions '--add-modules', MODULES_TO_ADD,
            '--strip-debug', '--compress', '2',
            '--no-header-files', '--no-man-pages'
    mergedModule {
        requires "java.xml"
    }
    launcher {
        // TODO Sync version number with release.yml and Main.java (github.com/BrightSpots/rcv/issues/662)
        name = "RCTab"
        version = "1.3.999"
    }

    jpackage {
        installerOptions += [
                '--verbose',
                '--vendor', 'Ranked Choice Voting Resource Center'
        ]
        if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
            imageOptions += [
                    '--icon', 'src/main/resources/network/brightspots/rcv/launcher.png',
            ]

            installerOptions += [
                    '--linux-package-name', 'rctab',
                    '--linux-deb-maintainer', 'info@rcvresources.org',
                    '--linux-shortcut'
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            imageOptions += [
                    '--icon', 'src/main/resources/network/brightspots/rcv/launcher.ico',
            ]

            installerOptions += [
                    '--win-per-user-install',
                    '--win-dir-chooser',
                    '--win-menu',
                    '--win-shortcut'
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
            // .App is signed with the Application certificate
            imageOptions += [
                    '--icon', 'src/main/resources/network/brightspots/rcv/launcher.icns',
                    '--resource-dir', 'src/main/resources/network/brightspots/rcv/',
                    '--mac-sign',
                    '--mac-signing-key-user-name', 'Developer ID Application: Election Administration Resource Center (A257HB4NS4',
                    '--mac-signing-keychain', 'build.keychain'
            ]

            // DMG is signed with the Installer certificate
            installerOptions += [
                    '--type', 'dmg',
                    '--icon', 'src/main/resources/network/brightspots/rcv/launcher.icns',
                    '--resource-dir', 'src/main/resources/network/brightspots/rcv/',
                    '--mac-sign',
                    '--mac-signing-key-user-name', 'Developer ID Installer: Election Administration Resource Center (A257HB4NS4)',
                    '--mac-signing-keychain', 'build.keychain',
                    '--mac-package-name', 'RCTab',
                    '--mac-package-identifier', 'network.brightspots.rcv',
                    '--mac-package-signing-prefix', 'network.brightspots.rcv'
            ]
        }
    }
}

def docsToCopy = copySpec {
    from("$projectDir") {
        include "README.md", "LICENSE", "config_file_documentation.txt"
    }
}

def sampleInputToCopy = copySpec {
    includeEmptyDirs = false
    from("$projectDir/src/test/resources/network/brightspots/rcv/test_data") {
        // Config example: interactive tiebreaking
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_sequential_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_cvr.xlsx"

        // Config example: by-precinct
        include "precinct_example/precinct_example_config.json"
        include "precinct_example/precinct_example_cvr.xlsx"

        // CVR example: CDF
        include "aliases_cdf_json/aliases_cdf_json_config.json"
        include "aliases_cdf_json/aliases_cdf_json_expected_summary.csv"

        // CVR example: Clear Ballot
        include "clear_ballot_kansas_primary/clear_ballot_kansas_primary_config.json"
        include "clear_ballot_kansas_primary/clear_ballot_kansas_primary.cvr.csv"

        // CVR example: Dominion
        include "dominion_kansas/dominion_kansas_config.json"
        include "dominion_kansas/dominion_kansas/kansas_input_data/*.json"

        // CVR example: ES&S
        include "2015_portland_mayor/2015_portland_mayor_config.json"
        include "2015_portland_mayor/2015_portland_mayor_cvr.xlsx"

        // CVR example: Hart
        include "hart_cedar_park_school_board/hart_cedar_park_school_board_config.json"
        include "_shared/hart_cvr_archive/*.xml"

        // CSV example: Hart
        include "generic_csv_test/generic_csv_test_config.json"
        include "generic_csv_test/generic_csv_test_cvr.json"

        exclude "output"
        exclude "**/*expected*"
    }
}

tasks.jlink.doLast {
    copy {
        with docsToCopy
        into JLINK_DIR + "/docs"
    }
    copy {
        with sampleInputToCopy
        into JLINK_DIR + "/sample_input"
    }
}
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
