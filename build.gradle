plugins {
    id "application"
    id "checkstyle"
    // Latest version at: https://github.com/spotbugs/spotbugs-gradle-plugin/tags
    id "com.github.spotbugs" version "5.0.9"
    id "idea"
    id "java-library"
    id "org.beryx.jlink" version "2.25.0"
    id "org.openjfx.javafxplugin" version "0.0.11"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

// ### Application plugin settings
application {
    mainClass = "${moduleName}.Main"
}

// Uncomment below to simulate running from the CLI
//run {
//    standardInput = System.in
//    args = ["-cli", "path/to/config"]
//}

// ### Checkstyle plugin settings
checkstyle {
    // Latest version at https://github.com/checkstyle/checkstyle/tags
    toolVersion = '10.3.2'
    // Keep the below file updated along with subsequent versions of Checkstyle (make sure to choose
    // the tag matching the toolVersion above):
    // https://github.com/checkstyle/checkstyle/blob/checkstyle-10.3.2/src/main/resources/google_checks.xml
    // NOTE: After updating the local version of config/checkstyle/google_checks.xml again in the
    // future, it may be necessary to subsequently replace the following line in the local copy to
    // prevent suppressions from being ignored:
    // "${org.checkstyle.google.suppressionfilter.config}"
    // with:
    // "${config_loc}/checkstyle-suppressions.xml"
    // Additional context: https://github.com/gradle/gradle/issues/21409
    configFile = file("$projectDir/config/checkstyle/google_checks.xml")
    maxWarnings = 0
    ignoreFailures = false
}
System.setProperty("org.checkstyle.google.suppressionfilter.config",
        "$projectDir/config/checkstyle/checkstyle-suppressions.xml")

spotbugs {
    // Latest version at: https://github.com/spotbugs/spotbugs/tags
    toolVersion = '4.7.1'
    excludeFilter = file("config/spotbugs/exclude.xml")
}

// ### Idea plugin settings
idea {
    module {
        outputDir = file("out/production/classes")
    }
}

// ### Java plugin settings
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

test {
    moduleOptions {
        addExports = [
                "org.junit.platform.commons/org.junit.platform.commons.util"   : "ALL-UNNAMED",
                "org.junit.platform.commons/org.junit.platform.commons.logging": "ALL-UNNAMED"
        ]
    }
    maxHeapSize = "2056m"
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

// ### JavaFX plugin settings
javafx {
    version = "18"
    modules = ["javafx.base", "javafx.controls", "javafx.fxml", "javafx.graphics"]
}

def JLINK_DIR = "$buildDir/rcv"
// Necessary to explicitly include due to https://github.com/BrightSpots/rcv/issues/625
def MODULES_TO_ADD = "com.ctc.wstx"

// ### jlink plugin settings
jlink {
    imageDir = file(JLINK_DIR)
    imageZip = file(JLINK_DIR + ".zip")
    addOptions '--add-modules', MODULES_TO_ADD, '--strip-debug', '--compress', '2',
            '--no-header-files', '--no-man-pages'
    mergedModule {
        requires "java.xml"
    }
    launcher {
        name = "rcv"
    }
}

def docsToCopy = copySpec {
    from("$projectDir") {
        include "README.md", "LICENSE", "config_file_documentation.txt"
    }
}

def sampleInputToCopy = copySpec {
    includeEmptyDirs = false
    from("$projectDir/src/test/resources/network/brightspots/rcv/test_data") {
        include "2015_portland_mayor/2015_portland_mayor_config.json"
        include "2015_portland_mayor/2015_portland_mayor_cvr.xlsx"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_sequential_config.json"
        include "sample_interactive_tiebreak/sample_interactive_tiebreak_cvr.xlsx"
        include "precinct_example/precinct_example_config.json"
        include "precinct_example/precinct_example_cvr.xlsx"
        include "dominion_cvr_conversion_alaska/*.json"
        exclude "output"
        exclude "**/*expected*"
    }
}

tasks.jlink.doLast {
    copy {
        with docsToCopy
        into JLINK_DIR + "/docs"
    }
    copy {
        with sampleInputToCopy
        into JLINK_DIR + "/sample_input"
    }
}
