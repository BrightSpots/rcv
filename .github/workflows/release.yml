name: Build Releases

on:
  release:
    types: [published]
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feature/issue-57_standalone-executable'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: "Create base filename for all artifacts"
        id: basefn
        shell: bash
        run: |
          FILEPATH=$(echo rctab_${{ github.ref_name }}_${{ runner.os }} | sed -e 's/\//_/g')
          echo "FILEPATH=$FILEPATH" >> $GITHUB_OUTPUT

      # Normalize platform-specific filepaths generated by gradle
      - name: "Create .zip filename"
        id: zipfn
        shell: bash
        run: echo "FILEPATH=build/${{ steps.basefn.outputs.FILEPATH }}.zip" >> $GITHUB_OUTPUT
      - name: "Get extension"
        id: ext
        shell: bash
        run: |
          if [ ${{ runner.os }} == 'Windows' ]; then
            echo "EXT=.exe" >> $GITHUB_OUTPUT
          elif [ ${{ runner.os }} == 'Linux' ]; then
            echo "EXT=" >> $GITHUB_OUTPUT
          else
            echo "EXT=.dmg" >> $GITHUB_OUTPUT
          fi
      - name: "Get jpackage output filepath"
        id: jpackagefn
        shell: bash
        run: |
          if [ ${{ runner.os }} == 'Windows' ]; then
            echo "FILEPATH=build/jpackage/rcv-1.0.exe" >> $GITHUB_OUTPUT
          elif [ ${{ runner.os }} == 'Linux' ]; then
            echo "FILEPATH=build/jpackage/rcv/bin/rcv" >> $GITHUB_OUTPUT
          else
            echo "FILEPATH=build/jpackage/rcv-1.0.dmg" >> $GITHUB_OUTPUT
          fi
      - name: "Create executable filename"
        id: exefn
        shell: bash
        run: echo "FILEPATH=build/${{ steps.basefn.outputs.FILEPATH }}${{ steps.ext.outputs.EXT }}" >> $GITHUB_OUTPUT
          
      - uses: actions/checkout@v3

      - name: "Set up JDK 17.0.2"
        uses: actions/setup-java@v3
        with:
          java-version: '17.0.2'
          distribution: 'temurin'

      - name: "Validate Gradle wrapper"
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3


      - name: "Create zip with jlinkZip"
        uses: ./.github/actions/gradle-and-sha
        with:
          gradle-command: jlinkZip
          intermediate-filepath: build/rcv.zip
          final-filepath: ${{ steps.zipfn.outputs.FILEPATH }}

      - name: "Create executable with jpackage"
        uses: ./.github/actions/gradle-and-sha
        with:
          gradle-command: jpackage
          intermediate-filepath: ${{ steps.jpackagefn.outputs.FILEPATH }}
          final-filepath: ${{ steps.exefn.outputs.FILEPATH }}

      - uses: actions/upload-artifact@v3
        with:
          name: Package
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/${{ steps.zipfn.outputs.FILEPATH }}
            ${{ github.workspace }}/${{ steps.zipfn.outputs.FILEPATH }}.sha512
            ${{ github.workspace }}/${{ steps.exefn.outputs.FILEPATH }}
            ${{ github.workspace }}/${{ steps.exefn.outputs.FILEPATH }}.sha512
          retention-days: 90

      - name: "Upload binaries to release"
        uses: svenstaro/upload-release-action@v2
        if: ${{ github.event_name }} == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/${{ steps.zipfn.outputs.FILEPATH }}*
          tag: ${{ github.ref_name }}
          overwrite: true
          file_glob: true
