Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) DRAFT NIST SP 1500-10X Voting Methods Section 3.1.4.41 Multi-round Voting Tabulation Methods : Ranked-Choice-Voting Overview This specification section describes a model of the tabulation process for a variety of multi-round voting methods. This section describes a process flow model designed to be sufficiently general to represent the variety of multi-round voting methods where there is a set of candidates in competition to fill one or more seats in a given elected office and a full tabulation of votes may require more than one iteration of tallying to determine the outcome of the election contest, and where the voter ranks candidates in order of the voter's preference. This section of this standard specification provides a descriptive, rather than prescriptive, model of a flexible tabulation process flow for tally for multi-round RCV voting methods in use in the United States [1] This RCV process specification is designed to be general and flexible enough to be used for the most common variants of RCV in use in the United States. There are several jurisdictions in the United States where RCV is in use, including the cities of San Francisco, Berkeley, Oakland and San Leandro in California; Telluride, Colorado; Portland, Maine; Takoma Park, Maryland; the cities of St. Paul and Minneapolis in Minnesota; Cambridge, Massachusetts. The state of Maine has adopted RCV and is planning an implementation for 2018. San Francisco is implementing a new system and has operated RCV contests since 2004. At the time of writing two jurisdictions in the United States that use RCV for multi-seat contests are Minneapolis, Minnesota for some city boards and Cambridge, Massachusetts for both City Council and School Committee. Terminology In this document, the term Ranked Choice Voting (RCV) is used to refer to multi-round voting methods in use in the United States where the voter ranks candidates in order of the voter's preference. In this document, Instant Runoff Voting (IRV) is a term that is used to describe a single-seat Ranked Choice Voting (RCV) contest variety. Single Transferable Vote (STV) is a term that is also used when the voting method is a multi-seat RCV contest. STV is generally considered in the 1 Section number corresponds to the section of DRAFT NIST-1500-10X Voting Methods Models that this review draft will occupy.[7] In this document, writings within footnotes, text titles, indexes, or keys of tables, charts, figures or appendices are for the purpose of information only and do not represent requirements to implement this standard. 1 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) literature to be equivalent to IRV in a single seat case. A variety of RCV variants are currently used in some jurisdictions of the United States. RCV Process Introduction This RCV tabulation process model provides for common variants of single and multi-seat contests. An RCV method process definition may set a threshold vote count that a candidate must reach or exceed in order to be elected. The tabulation process occurs in one or more rounds with one tally of votes per round. In each round, typically, one or more candidates with the fewest votes are eliminated. Typically, the votes for eliminated candidates are transferred to the next highest ranked non-eliminated candidate until a candidate exceeds the threshold or until the number of candidates that have not been eliminated matches the number of seats to be elected. If there are no more choices available, the ballot is considered exhausted and is no longer processed. A round in a multi-seat contest may elect one or more candidates and transfer surplus votes in excess of the threshold to other candidates. The number of rounds required will be impacted by the number of seats to be filled, the number of candidates competing for those seats, the votes accumulated for those candidates and configuration options for the particular instantiation of an election contest. RCV Tabulation Scenarios This RCV tabulation process model is general and flexible enough to be applied to tabulation scenarios for a single or centralized RCV tabulation, and for aggregations. The configuration of this general process model for applicable procedural steps and a specific election contest provides for variants of RCV tabulation. This standard specification and this process model are not intended to provide detailed, fine grain, systems engineering level specification of all possible configuration scenarios, implementation variants, or edge case scenarios. Common election contest features are intended to be configured, consistent with the common contest configuration business rules elements of the parent “Tally” process of the Tabulation element of the NIST Election Business Process Model framework[2]. Specialized modules may be provided by the adopter of this specification, would be consistent with that framework. However, this specification does not seek to model configurable business rules or modules. 2 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) An example configurable local business rules is configuration of implementation of optical ballot mark adjudication sub-processes or procedure, tie breaking methods, or specialized encryption modules. The standard provides for the scenarios in which summaries are input as a Cast Vote Record Report (CVRR) of the CVR CDF and output as a CVRR [4] or as an Election Results Reporting CDF [3]. Specifically, this standard uses the CVR CDF to meet requirements of voting methods scenarios and also for Data Interoperability and Data Integrity in the following ways: • Supports multi-round voting methods including RCV variants that require storing the state of the CVRR or CVR set at multiple states or to record a series of states of the tabulation process. • Stores and outputs CVRR tally/tabulation with corresponding ‘snapshot’ sets of CVRs in sequential order per round. • Represents the CVR in the ubiquitous common data interchange formats, XML and JSON, supporting easy translation from device-specific internal formats where necessary. • The CVR data set may be represented in the form of its corresponding Cast Vote Record Report (CVRR). • The CVR data set and its corresponding CVRR may also be represented (output) in the Election Results Reporting CDF . • Flexibly accommodates scenarios with specialized internal equipment data formats through the CVR CDF such as: • CVRs as they are generated by the vote selection capture devices, • CVRR summaries generated by the vote selection capture or other devices, and • CVRs used in audit or adjudication processes that may require re-tabulation or specialized tabulation. Distributed tabulations, involving aggregation of polling place tabulators and centralized tabulators are supported. In addition to supporting Data Interoperability and the particular requirements of multi-round voting method variants, the CVR CDF supplies features to support elements of Data Integrity such as: 3 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • Digital Signature, • Data Provenance, • Data Chain of Custody, and • Metadata specific to the vote selection data set or vote selection data summaries. Thereby, the adoption of the CVR CDF specification’s refernce implementation provides required features to support Use Cases including Data Security, Auditing, End to End Verification and Cybersecurity, Risk Management, and Data Privacy. Further, adoption of the CVR CDF is expected to provide the basis for data representation features supportive of choices for implementation of this standard specification in a variety of modern technology architectures, such as de-coupled, API based components or systems integration and microservice architecture with component level Service Level Agreements (SLA) or component integration ‘contracts’, and security and access control to vote selection data sets and summaries [4]. This standard specification adopts the recommendations of the NIST-EAC Cybersecurity working group [8]. This standard specification requires compliance with TGDC VVSG 2.0 Guidelines [6]. [draft note: This standard specification DRAFT section 3.1.4.4 intended for inclusion in the NIST SP 1500-10x Voting Methods specificaiton, should currently be considered to require compliance with the applicable TGDC 2007 VVSG Recommended Guidelines and more specifically, assumes that whatever updated TGDC Guidelines that are prepared by NIST TGDC and presented for approval to the EAC for VVSG 2.0 will be complied with by adopters of this standard. We will update this draft standard to align with TGDC VVSG 2.0 recommendations, and the other NIST Interoperability CDF and Cybersecurity specifications as those recommendations become available or release update versions. -LL/Editor] This process model specification assumes a computerized implementation and is not intended to provide for human actors implementing hand counts, or the specification of other human actor implemented subprocesses. This process model can be adapted to, and contains the essential processing steps needed for, a manual tabulation of paper ballots or paper CVRs. However, it does not attempt to describe those adaptations or specialized procedures or flows that may be required for manual tabulation, or hand counts. Resources 4 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) The following resources shall be available as a precondition or as input to this process model to complete a tabulation of an RCV contest: • A vote selection data set of record in the form of a Cast Vote Record Report (CVRR) or set of CVRs Common Data Format (CDF) representing one more ballots.2 • A set of tabulation configuration parameters that indicate information about the contest, the candidates, and which specific options should be used during the tabulation to conform to a particular jurisdiction’s variant of RCV. • 2 5 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • A set of optional configuration parameters that specify user supplied, implementation specific business rules. For example, adjudication of ballot marks, encryption or other special security policies, specialized tie breaking rules, or other special locally required modules. The reference implementation of this standard specification adopts the NIST Cast Vote Record (CVR) specification[3] as the vote selection data set Common Data Format (CDF), for the purpose of Data Interoperability. For the purpose of this standard, one or more Cast Vote Record Reports or sets of Cast Vote Records are assumed to be the vote selection data sets of record, irrespective of what medium or voting equipment was provided to voters to produce their marked ballots. Nothing about this RCV process flow model is intended to restrict the adopter of this standard as to the internal equipment format of a system that may produce vote selection data sets. This standard specification reference implementation adopts the NIST CVR CDF as a Common Data Format because the NIST Cast Vote Record specification (CVR CDF) is general and flexible enough to apply to a the wide variety of voting methods, election instantiations, and use cases. The CVR specification provides XML and JSON formats to support translation into the CVR CDF. This standard specifications RCV model supports variants of RCV implementation or a multi-round voting method instance where it is necessary to store the state of the CVRR or CVR set per round. In that instance, the output from this RCV model is composed of a CVRR representing the outcome of the tabulation process and also the corresponding sets of CVRs in sequential order for each round that was executed. The remainder of this section of this standard specification illustrates the descriptive process flow and provides details of the generic RCV process and its common variants that are in use in one or more jurisdictions in the United States. This section is organized by the RCV process flow steps and in the order of numbering of the steps in process in the flow diagram Figure 1 (below). 6 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) 7 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Figure 1 8 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) RCV Process Flow Steps The following applies to all process steps of this RCV process specification. For each process step “Resources” described for that step shall be available as a prerequisite for execution of that process step. This standard specification reference implementation adopts the NIST Election Event Logging Specification 1500-101[5] for logging and tracing. Nothing about this standard’s compliance with NIST 1500-101 is intended to limit an adopter of this standard from implementing their own logging format internal to equipment or with additional and more comprehensive event logging, or supplementary to logging requirements of NIST 1500-101. When an alert, event or state transition configured to trigger a process suspension or an exit from the process at any process step, it shall be logged and the event handling shall be implemented in accordance with the NIST Election Event Logging Specification 1500-101.[5] The following conditions trigger logging of the event and may result in suspension of the process, exit from a step, or termination of a tabulation process in this process model, although the process flow diagram and steps descriptions are not intended to explicitly model those locally configurable details of implementation of process flow • Adjudication Event • Error Event • Tie-Breaking Event 1. RCV Process Step One : Marked first-choice tabulation used? This decision step determines whether to perform a tabulation of marked first choices which might fill all seats and thereby not require a tabulation that considers marked second and later choices in order to determine the outcome of the election contest. Flows. This step is the entry point for the RCV tabulation process; there are no other processing control flows into this step. The Yes path to Step 2 (Determine # of ballots and candidate vote counts by marked first-choices) is taken if an initial tabulation of marked first choices is used. The No path to Step 5 (Stage all CVRs) is taken if the CVRs are used to initially determine the effective first-choice candidate votes. 9 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. The description for Step 6 (Process a staged CVR) has additional detail about how effective first choices are determined. Resources. VM.RCV.Tabulation.Configuration.AllowMarkedFirstChoice, an indication of whether a tabulation of marked first choices is required by local rules. Explanation. In practice, in some instances of an election contest the tally of marked first choices determines the outcome of the contest. Whether to process a tabulation of marked first choices is a matter of law or local practice. A tally of marked first choices may result in the same outcome but be simpler to accomplish than a complete multi-round tally of “effective first choices” because determining an effective first choice may require examining second and later marked choices. Variants. Some RCV variants require a marked first-choice tabulation subprocess, allow it as an option, or perform it as a matter of practice. If a ballot has a validly marked first choice, then that marked first choice is also the ballot's effective first choice. However for some variants, a ballot can have an effective first choice but not a marked first choice if the first choice is left blank or is not valid but there is a second or subsequent choice that is validly marked. See the description for Step 6 (Process a staged CVR) for additional details about how effective first choices are determined. 2. Determine # of ballots and candidate vote counts by marked first-choices This process step is the first step in the Marked First-choice Tabulation subprocess. It determines two count values: BallotCount and VoteCount. This process step is initiated when the jurisdiction’s RCV variant implementation is configured for the Marked First-choice Tabulation subprocess. The RCV configuration data element VM.RCV.Tabulation.Configuration.AllowMarkedFirstChoice shall have been set to 1 (or True). Flows. This processing control flows in from the Yes branch from Step 1 (Marked first-choice tabulation used?). This processing flow control flows out to Step 3 (Determine threshold (T) to win & elect candidates). This process step is completed if the following condition is met: • VM.RCV.Tabulation.BallotCount and • VM.RCV.Tabulation.MarkedFirstChoices.VoteCount have been determined. 10 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. None. Resources. • The CVRR with CVRs representing ballot selections to be tabulated, or set of CVRRs, for the scenarios of aggregation. Aggregation scenarios may include precinct, central tabulation and vote total summaries. • VM.RCV.Tabulation.Configuration.MarkedFirstChoices.ThresholdBaseType, an indication of which ballots are counted as part of the threshold base for a tabulation of marked first choices. Explanation. For each CVR, if the first choice is not marked or is overvoted, the CVR will not count for any candidate, but might be counted as an undervote or overvote. If the CVR records a validly marked first choice selection for a single candidate, the CVR contributes a single vote for that candidate. The number of ballots used as the base for the threshold calculation in Step 3 (Determine threshold (T) and elect candidates) is also determined. Variants. The number of ballots counted in the threshold base can be: • the total number of cast ballots. • the total number of ballots with validly marked first choices that count for candidates. • the number of ballots cast except for those with a marked overvote for first choice. 3. Determine threshold (T) to win and elect candidates This process step is the second step in the Marked First-choice Tabulation subprocess; it determines the threshold used to identify how many votes a candidate must have in order to be elected by the tabulation of marked first choices and then elects any candidates that have at least that many votes. Flows. Processing control flows in from Step 2 (Determine # of ballots and candidate vote counts by marked first-choices) and out to Step 4 (All seats filled?). See also. Compare to related calculations for a full RCV tabulation in block 14 (Determine threshold from vote totals) and block 15 (Any candidate votes > T?). Those calculations cover more variations and the possibility of fractional votes. 11 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Resources. • VM.RCV.NumberSeatsToFill, the number of seats to be filled by this contest; • VM.RCV.Tabulation.MarkedFirstChoices.ThresholdBase, the number of ballots comprising the threshold base; • VM.RCV.Tabulation.MarkedFirstChoices.VoteCount, the number of marked first-choice votes counting for each candidate; Explanation. Although there exist possible notational variants in legislation, local rules or guidelines, the threshold formula for any number of candidates to be elected is: T= 1 + B / (N+1) rounded down to the nearest whole number, where T is the threshold, B is the number of ballots in the threshold base, and N is the number of candidates to be elected. The threshold criterion requires that a candidate must have at least T votes to be elected. For example, in a contest where only one candidate is to be elected and the threshold base is 607 votes, the threshold is 304 votes [floor(1 + 607/2)], and a candidate must have at least that many marked first-choice votes to be elected. In a contest with 4 candidates to be elected where the threshold base is 607 votes, the threshold would be 122 votes [floor(1 + B/5)], and a candidate must have at least that many marked first-choice votes to be elected, i.e. slightly more than 20%. Variants. Equivalent to the above formula and criterion, Oakland defines its threshold, applicable only to single-seat contests, in terms of a majority of the threshold base, i.e. more than 50% of the threshold base. 4. All seats filled? This decision step is the third and last step in the Marked First-choice Tabulation subprocess; it will determine whether all seats have been filled by that subprocess. Flows. Processing control flows in from Step 3 (Determine threshold (T) to win & elect candidates) and out along one of two paths. The Yes path to Step 22 (Done) is taken if all seats are filled or if there are not more eligible candidates than seats. The No path to Step 5 (Stage all CVRs) is taken if one or more seats have not been filled due to insufficient candidates obtaining the required number of marked first-choice votes and there are more eligible candidates than seats. In a single-seat contest, electing one candidate is sufficient for taking the Yes path. See also. A similar decision is made in Step 17 (All seats filled?). 12 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Resources. • The number of candidates elected by the Marked First-choice Tabulation subprocess. • The number of candidates eligible to be elected. • VM.RCV.NumberSeatsToFill, the number of seats to be filled. Explanation. If the No path is taken, a tabulation is initiated and the first round of that tabulation is conducted irrespective of results of the tabulation of marked first choices (See Step 12 Variants). In particular, candidates elected by marked first choices are considered unelected continuing candidates at the beginning of the tabulation. If the Yes path is taken, the second tabulation is not required. Variants. None. 5. Stage all CVRs This process step stages all CVRs for the initial assignment to the candidate, if any, that each CVR will count for in the first round. Flows. Process control flows in from the No path from Step 1 (Marked first-choice tabulation used?) and the No branch from Step 4 (All seats filled?) and out to Step 6 (Process a staged CVR). See also. CVRs are also staged for reassignment (a.k.a. transfer) in Step 18 (Stage CVRs with surplus votes for elected candidate(s)) and Step 20 (Defeat candidate(s) with fewest votes and stage their CVRs). Resources. All CVRs to be tabulated. Explanation. Staging a CVR means to identify the CVR as needing assignment to a candidate by the Assignment subprocess of Step 6 (Process a staged CVR) through Step 11 (All CVRs processed). In this step, all CVRs are staged for assignment in preparation for the first-round vote tallies. Starting at this step, the tabulation proceeds without any reliance on any results of a preceding tabulation of marked first choices. In particular, all candidates are now treated as continuing candidates, neither elected nor eliminated, without any votes. Variants. Minneapolis is the only variant for multi-seat contests that requires a tabulation of marked first choices. For that variant, It is possible that a tabulation of marked first choices will elect at least one candidate, but will not elect enough candidates to be decisive for the whole contest. In that case, as the tabulation proceeds from this step, the any elected status from the tabulation of marked first choices is ignored. However, the Minneapolis rules are structured so that any candidate elected by 13 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) the tabulation of marked first choices will also reach the threshold in the first round and will still be elected by the remainder of the tabulation. For the Cambridge multi-seat variant, CVRs start with a recorded ordering. CVRs are initially processed in that order and the subsequent processing order depends in part on the initial ordering. The same initial ordering is used across different tabulations, including recounts. CVRs are initially ordered based on a random ordering of precincts, and within precincts they are given a fixed but unspecified ordering. For other variants, the tabulation outcome, i.e. which candidates are elected, does not mathematically depend on the order in which CVRs are processed. However, as a practical observation for multi-winner contests, there are implementations of some variants that may produce numerical results that are dependent on the order in which CVRs are processed due to rounding of fractional values (in cases where an implementation supports fractional values). 6. Process a staged CVR This process step removes a single CVR from the collection of staged CVRs and identifies the candidate for which the CVR will next count, i.e. the CVR’s highest ranked continuing candidate, if such a candidate exists. Flows. CVRs processed in this step have been staged for assignment / reassignment from one of three sources: 1. From Step 5 (Stage all CVRs), where all CVRs are staged for the first round; 2. From Step 20 (Defeat candidate(s) with fewest votes and stage their CVRs) after a candidate has been defeated;or 3. From Step 18 (Stage CVRs with surplus votes for elected candidate(s)), after a candidate has been elected with surplus votes in a multi-seat contest. Process control flows in from Step 11 (All CVRs processed?). Process control flows out of this step to decision Step 7 (Valid most preferred continuing candidate?). See also. The description of Step 18 (Stage CVRs with surplus votes for elected candidate(s)) has further details about the two methods used to redistribute surplus votes: • as a fractional vote per CVR, but for all CVRs that counted for the elected candidate. • as a whole vote per CVR but usually only for a subset of the candidate’s CVRs. Step 2 (Determine threshold (T) to win and elect candidates) provides the corresponding determination of which, if any, candidate a CVR counts for during the Marked First-choice Tabulation subprocess. Resources. 14 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • The collection of CVRs staged but not yet processed for assignment. • The tabulation configuration parameters that specify how the most preferred continuing candidate is determined: • VM.RCV.Tabulation.Configuration.AllowSkippedRankings, an indication of whether a ranking level may be left blank without causing less preferred ranking levels to be ignored. • VM.RCV.Tabulation.Configuration.AllowOvervotedRankings, an indication of whether a ranking level may rank more than one candidate without causing that ranking level or less preferred ranking levels to be ignored. • VM.RCV.Tabulation.Configuration.AllowRepeatRankings, an indication of whether a ranking level may rank a candidate who has also been ranked at a more preferred ranking level without causing the CVR to be exhausted when the repeating ranking level is encountered. • Corresponding to the indicator parameters (above), configuration modules indicating local rules. • The set of continuing candidates; alternatively, VM.RCV.Tabulation.CandidateStatus for every candidate, the status of whether a candidate is a defeated, elected, or continuing candidate. Explanation. A continuing candidate is a candidate that is not yet defeated nor elected. A CVR’s most preferred continuing candidate is also known as the highest ranked continuing candidate. When determined to decide the first-round vote totals, the most preferred continuing candidate is also known as the effective first-choice candidate. Determining the most preferred continuing candidate can be fairly straightforward if the voter has simply ranked candidates in a strict order of preference. If any continuing candidates have been ranked, the most preferred continuing candidate is the candidate out of all ranked continuing candidates with the lowest numerical ranking number. If no continuing candidate has been ranked on the CVR, the CVR does not have a most preferred continuing candidate. However there are several irregular ranking situations that a voter might mark and which are treated according to variant-specific rules. Those situations include: • No candidate is ranked at a ranking level, but one is ranked at a less preferred ranking level. • More than one candidate is ranked at a ranking level. • A candidate is ranked at more than one ranking level. Variants. The following describes how irregular ranking situations are treated by variants: • Unvoted choice (no candidate ranked at a ranking level, but some at subsequent levels) o CVR considered exhausted o CVR considered exhausted if there are two unvoted choices in succession o Skipped and subsequent choice processed, if any 15 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • Overvoted choice (more than one candidate ranked at a ranking level) o CVR considered exhausted o Not considered overvoted if doesn’t contain more than one continuing candidate o Skipped and subsequent choice processed, if any • Repeated ranking of a previously ranked candidate (who was elected or eliminated) o CVR considered exhausted o Skipped and subsequent choice processed, if any All variants detect these irregular ranking situations incrementally, as if examining ballot selections in order of increasing numerical ranking level, and stop once a most preferred continuing candidate is found. If a CVR is considered exhausted, that also means that the CVR is considered to not have a most preferred continuing candidate. 7. Valid most preferred continuing candidate? This decision step branches depending on whether the previous Step 6 (Process a staged CVR) identified a most preferred continuing candidate for the CVR. Flows. Process control flows in from Step 6 (Process a staged CVR). The Yes path to Step 10 (Assign CVR to that candidate) is taken if the CVR has a valid selection for a most preferred continuing candidate. The No path to Step 8 (Ballot is exhausted. Update reason stats for reporting.) is taken if the CVR does not have a valid selection for a most preferred continuing candidate. See also. None. Resources. Whether or not a most preferred continuing candidate was found in the previous Step 6 (Process a staged CVR). Explanation. No additional explanation. Variants. None. 8. Ballot is exhausted. Update reason stats for reporting This processing step records, for the purposes of reporting round results, the reason for the ballot being considered exhausted, based on the circumstances of not finding a most preferred continuing candidate in Step 6 (Process a staged CVR). Flows. Process control flows in from Step 7 (Valid most preferred continuing candidate?) and out to Step 9 (CVR no longer processed). 16 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. Step 6 (Process a staged CVR) describes situations in which a most preferred continuing candidate would not be found. Step 18 (Stage CVRs with surplus votes for elected candidate(s)) describes additional details for how the Cambridge variant handles the transfer of surplus from an elected candidate. Resources. Depending on the variant: • The tabulation configuration parameters that indicate which categories are supported and the rules for categorizing an exhausted ballot. • Data that may be used to categorize the exhausted CVR, possibly including: • The situation encountered in Step 6 (Process a staged CVR) that prevented a most preferred continuing candidate from being identified. • The CVR that was exhausted. • VM.RCV.Tabulation.ReportingRound, the number of the round for which the exhausted ballot will be first reported. • VM.RCV.Tabulation.Configuration.MaxNumberRankings, the maximum number of candidates that the voter was allowed to rank. Explanation. For each round, the cumulative number of votes associated with exhausted ballots may be reported in one or more categories, which are variant or implementation specific. This is effectively an assignment of the CVR to one of the reporting categories. Variants. The cumulative number of exhausted votes might not be reported at all or might be reported in a single, undifferentiated category. The categories of exhausted ballots can include one or more of the following: undervotes (first round only), overvotes, abstentions, and a category for exhausted votes not otherwise categorized. Some implementations use the term “exhausted” to refer only to ballots and votes that are categorized in that last category. The Cambridge variant does not treat ballots as exhausted when they have been staged from Step 18 (Stage CVRs with surplus votes for elected candidate(s)). Instead, a CVR that does not have a most preferred continuing candidate returns back to count for the elected candidate from which it was staged. The Cambridge variant will extend its staging and reassignment of CVRs, one CVR at a time, until the full surplus has been transferred to other candidates or until a reassignment to other candidates has been attempted for all CVRs assigned to the elected candidate. 9. CVR no longer processed This processing step explicitly marks the end of tabulation processing for an exhausted ballot. Flows. Process control flows in from Step 8 (Ballot is exhausted. Update reason stats for reporting.) and out to Step 11 (All CVRs processed? ) [the outbound flow is not currently shown in the diagram], even though there is no further processing of this CVR. 17 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. None. Resources. None. Explanation. This step reflects that once a ballot becomes exhausted, it can not be revived and later be assigned to count for a candidate. Variants. None. 10. Assign CVR to that candidate This process step assigns the CVR to count for its most preferred (highest ranked) continuing candidate, as identified in Step 6 (Process a staged CVR). Flows. Process control flows in from the Yes path from Step 7 (Valid most preferred continuing candidate?) and out to Step 11 (All CVRs processed?). See also. None. Resources. • The CVR that will be assigned. • The CVR’s most preferred continuing candidate. • The collection of CVRs already assigned to the CVR’s most preferred continuing candidate. Explanation. The CVR is added to the collection of CVRs that are assigned to the most preferred candidate. Variants. For the Cambridge variant, where the order processing CVRs is important, the CVR is appended to a sequence of the CVRs that are already assigned to the most preferred candidate. The CVR will contribute one full vote or a fraction of a vote to that candidate’s vote total. The CVR will contribute only a fraction of a vote only for certain variants for multi-seat contests, in which case, the fraction of a vote represents the CVR’s share of surplus transferred from an elected candidate. For the Cambridge variant, a candidate is allowed to accumulate a surplus of votes only for the first round tally of candidate vote totals. After that, the assignment of CVRs in this step keeps a running total of votes counting for each continuing candidate, a total which is updated after each assignment of a CVR to a candidate. If the candidate reaches the threshold as a result of an assignment, the candidate is immediately considered elected, is not eligible to be assigned additional CVRs, and so never accumulates surplus. Instead, any subsequent ballots that would have otherwise contributed to a surplus are assigned to other candidates or are exhausted. 18 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) 11. All CVRs processed? This decision step checks whether all CVRs staged for assignment to a candidate have been processed. Flows. Process control flows in from Step 10 (Assign CVR to that candidate). The Yes path to Step 12 (Tabulate vote totals) is taken if all CVRs staged for assignment to a candidate have been processed. The No path to Step 6 (Process a staged CVR) is taken if some staged CVRs still remain to be processed. See also. Step 10 (Assign CVR to that candidate) and Step 18 (Stage CVRs with surplus votes for elected candidate(s)) have additional descriptions of how surplus transfers are processed for the Cambridge variant. Resources. The number of CVRs that have been staged for assignment but which have not yet been processed for assignment; alternatively, the collection of such CVRs. Explanation. Reaching this step marks the end of processing for a specific CVR regarding its assignment within the current round or at termination of all processing of the CVR set, as the case may be. Variants. The Cambridge variant at least sometimes stages and processes for assignment CVRs one at a time when they represent surplus transfers. In that case there may not be any staged but unprocessed CVRs, but this decision point will stage and process for reassignment an additional CVR if the elected candidate’s surplus has not yet been transferred to other candidates, provided there are still CVRs for that candidate which have not yet been staged for attempted reassignment. 12. Tabulate vote totals This processing step tallies the round’s vote totals for each candidate and for any other reporting categories. Flows. Processing control flows in from the Yes branch from Step 11 (All CVRs processed?) and out to Step 13 (Threshold exists for current round?). See also. Step 10 (Assign CVR to that candidate) and Step 18 (Stage CVRs with surplus votes for elected candidate(s)). Resources. • VM.RCV.Tabulation.VoteCount, the most recent vote totals from Step 12 (Tabulate vote totals) or zeroed vote totals if this is for the first round. • Sets of CVRs that were assigned to candidates or to a reporting category for exhausted CVRs since the previous round’s vote totals or, if this is for the first round, since the staging of all CVRs in Step 5 (Stage all CVRs). • New vote totals for any candidates from which surplus votes have been transferred since the previous round’s vote totals. 19 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Explanation. Vote totals for the round are produced by summing the votes by assigned candidate for all CVRs or by adding the vote contributions of newly reassigned CVRs to the vote totals produced by the previous invocation of this step. Also, the CVRs’ vote contributions (for defeated candidates) or partial vote contributions (for elected candidates with surplus) are subtracted from the previously assigned candidate, if any. Equivalently, these vote totals may be updated incrementally, performing subtractions as CVRs assigned to a candidate are staged for reassignment in Step 18 (Stage CVRs with surplus votes for elected candidate(s)) and Step 20 (Defeat candidate(s) with fewest votes and stage their CVRs) and performing additions as CVRs are assigned to candidates in Step 10 (Defeat candidate(s) with fewest votes & stage their CVRs) or to other reporting categories in Step 8 (Ballot is exhausted. Update reason stats for reporting). Several ordinances specify that all of the continuing ballots for all continuing candidates shall be counted again in a new round, or the equivalent. Variants. If there was a tabulation of marked first choices in block 2, the candidate vote totals for the first round can be higher, but never lower, than the candidate totals of marked first choices. A candidate vote total can be higher if there are one or more ballots with no marked first choice, or in some jurisdictions an invalidly marked first choice, but there is a valid candidate selection for a subsequent choice. For variants that do not use fractional votes, these vote totals for candidates and categories of exhausted votes can also be determined by totalling the current vote contribution of every CVR, not just those recently assigned or reassigned, to the vote total for the candidate or reporting category to which the CVR is currently assigned. For multi-seat variants using fractional surplus votes, candidates that were elected, either without surplus or that have had surplus transferred to other candidates, must also be assigned a vote total equal to the threshold. For some of these variants, this may only produce an approximation of their recorded vote totals, due to rounding in surplus transfer calculations. For other variants, that rounding may be accounted for in a reporting category of residual surplus votes. 13. Threshold exists for current round? This decision step determines whether a previously calculated threshold value will continue to be used or whether instead a new threshold value will be calculated. Flows. Process controls flows in from Step 12 (Tabulate vote totals). The Yes path to Step 15 (Any candidate votes > T?) is taken if there is a current threshold value that will continue to be used. The No path to Step 14 (Determine threshold from vote totals) will be taken if a new threshold value will be calculated. 20 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. None. Resources. • VM.RCV.Tabulation.Configuration.RecalculateThreshold, an indication of whether the threshold will be calculated only in the first round and reused rather than recalculated for subsequent rounds, or whether the threshold will be calculated for every round. • VM.RCV.Tabulation.ReportingRound, the number of the round for which candidate vote totals have most recently been calculated. Explanation. The No path will be taken to calculate a new threshold value if and only if the tabulation configuration parameter indicates that the threshold will be calculated every round or if the number of the round is 1. Typically, the tabulation configuration parameter indicates that the threshold will be calculated for every round for single-seat contests but only for the first round for multi-seat contests. In that case, the Yes path is only taken for the second and subsequent rounds of a multi-seat contest, which reuses the first-round threshold. Variants. The St. Paul variant, which is only for single-seat contests, is an exception that uses for all rounds the threshold calculated for the first round. 14. Determine threshold from vote totals This processing step determines the threshold base and the threshold used to form a sufficient criterion for electing a candidate based on that candidate’s vote total. Flows. Process control flows in from the No path from Step 13 (Threshold exists for current round) and out to Step 15 (Any candidate votes > T?). See also. Step 3 (Determine threshold (T) to win & elect candidates) performs a corresponding calculation of threshold for a tabulation of marked first choices. Resources. • One of: • VM.RCV.Tabulation.VoteCount for each candidate, the most recent vote totals for candidates from Step 12 (Tabulate vote totals). • VM.RCV.Tabulation.NumberTabulatedCvrs, the total number of CVRs being tabulated. • Tabulation configuration parameters that indicate: • VM.RCV.Tabulation.Configuration.ThresholdBaseType, an indication of which threshold base to use: the total votes for candidates or the total number of CVRs being tabulated. • VM.RCV.Tabulation.Configuration.ThresholdRoundingPrecision, the number of decimal places to which the threshold should be rounded. • VM.RCV.Tabulation.Configuration.ThresholdRoundingDirection, the direction that the threshold value should be rounded, up or down. 21 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • VM.RCV.Tabulation.Configuration.ThresholdComparisonType, the type of threshold criterion comparison to use: must exceed the threshold (>) or must reach or exceed the threshold (≥). • VM.RCV.NumberSeatsToFill, the number of seats this contest may fill. Explanation . The threshold is a number of votes that determines, together with the threshold comparison type, how many votes are sufficient for a candidate to be elected. It is also the point at which additional votes for a candidate are considered to be surplus votes for the candidate. If the threshold base is the total number of votes counting for candidates, that total must first be calculated from the vote totals for individual candidates. Otherwise, the total number of tabulated CVRs is used as the threshold base. A formula for the threshold can be expressed as: T = B / (S + 1) + X where T is the threshold, B is the threshold base, S is the number of seats to be filled, and X is some small extra amount between zero and one. There are two approaches for matching the threshold comparison to the allowed values of X in order to ensure that it is mathematically impossible to elect too many candidates: • X must be greater than zero, but reaching the threshold (≥) is sufficient to be elected • X can be zero, but the threshold must be exceeded (>) in order to be elected Variants. The more traditional and common method of determining the threshold is to use a threshold base of votes counting for candidates, a ≥ threshold comparison, and the specialized formula: T = floor( 1 + B / (S + 1)) Using this formula, X is always greater than zero and less than or equal to one. This approach works for most single-seat thresholds, even though their threshold criterion is typically defined in terms of a majority of votes counting for continuing candidates, i.e. > 50%, to the extent that single seat votes are only counted as whole votes. St. Paul, which only uses single-seat contests, uses the total number of tabulated CVRs as its threshold base. Some recent variants for multi-seat contests use the second approach above and require a > threshold comparison. For example, SB 1288 uses a threshold base of the total number of votes for candidates, but a threshold formula of: T = round_up(B / (S + 1), 5) 22 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) which rounds the ratio B / (S + 1) up to five decimal places, the precision for calculating fractional votes. Using this formula, X can be zero but is always less than 0.00001. In the diagram, the threshold criterion is expressed in terms of the second approach with the understanding that the greater-than-or-equal-to criterion of the first approach can be substituted as appropriate. 15. Any candidate votes >T? This decision step determines whether candidates are elected as a result of having enough votes to satisfy the threshold criterion and there not being any special conditions that require that defeating candidates takes priority over electing candidates. Flows. Process control flows in from the Yes path from Step 13 (Threshold exists for current round?) and from Step 14 (Determine threshold from vote totals). The outbound Yes path to Step 16 (Elect candidates) will be taken if no special defeat criteria are satisfied and either the number of continuing candidates is not greater than the number of unfilled seats or one or more continuing candidates satisfy the threshold criterion. The outbound No path to Step 19 (# continuing candidates = # unfilled seats?) is taken if special defeat criteria are satisfied or both the number of continuing candidates is greater than the number of unfilled seats and there are no candidates that satisfy the threshold criterion. See also. Step 3 (Determine threshold (T) to win & elect candidates) performs a corresponding determination of whether there are candidates that can be elected for a tabulation of marked first choices. Resources. • VM.RCV.Tabulation.VoteCount for all candidates, the most recent vote totals from Step 12 (Tabulate vote totals). • VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. • VM.RCV.NumberSeatsToFill, the number of seats to be filled. • VM.RCV.Tabulation.Threshold, the threshold value. • VM.RCV.Tabulation.Configuration.ThresholdComparisonType, the type of threshold criterion comparison to use: must exceed the threshold (>) or must reach or exceed the threshold (≥). • Other variant-specific information needed to determine whether defeating candidates should take priority in this round, such as: • VM.RCV.Tabulation.IsCandidateUndeclaredWriteIn for all candidates, an indication of whether a candidate is an undeclared write-in candidate. • VM.RCV.Tabulation.TotalBallotSelections for each candidate, the total number of valid ballot selections across all ranking levels for each candidate. 23 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Explanation. The core decision is whether any continuing candidate has a vote total that satisfies the threshold criterion, that is, the vote total > T or vote total ≥ T, depending on the type of threshold comparison. However some variants may make defeating candidates a priority, even if there are continuing candidates that satisfy the threshold criterion. The test for whether there are more continuing candidates than unfilled seats should only need to be checked when checking first-round vote totals. Variants. Minneapolis has a rule for its multi-seat contests that requires, subject to defined conditions, that the No path to be taken in order to eliminate one or more candidates, even if one or more continuing candidates has enough votes to satisfy the threshold criterion. In particular, if there are not enough candidates satisfying the threshold criterion (votes ≥ the threshold) to fill all of the seats, and if there are any undeclared write-in candidates or any candidates that are “mathematically impossible to be elected”, as defined, then defeating those candidates takes priority over electing any continuing candidates that do satisfy the threshold criterion. CA SB 1288 has a default provision and HR 3057 and the Maine RCV law require that for single-seat contests, the No path be taken for single-seat contests as long as there are three or more continuing candidates. This can extend the tabulation to show a one-on-one comparison between the two finalists without changing which candidate is elected. San Francisco has adopted this option in practice. 16. Elect candidate(s) This processing step elects one or more of the continuing candidates with a vote total that satisfies the threshold criterion or elects all continuing candidates if their number does not exceed the number of unfilled seats. Flows. Processing control flows in from Step 15 (Any candidate votes > T?) and out to Step 17 (All seats filled?). See also. Step 3 (Determine threshold (T) to win & elect candidates) performs a corresponding function of electing candidates for the Marked First-choice Tabulation subprocess. Resources. • VM.RCV.Tabulation.VoteCount for all candidates, the most recent vote totals from Step 12 (Tabulate vote totals). • VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. 24 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) • VM.RCV.Tabulation.Configuration.RestrictNumberElected, an indication of whether at most one candidate can be elected in a round if all seats can not be immediately filled. • VM.RCV.Tabulation.Configuration.ResolveSurplusTies, an indication of how ties for having the most surplus are resolved. Explanation. At least one continuing candidate that satisfies the threshold criterion is elected. If the number of continuing candidates is less than or equal to the number of unfilled seats, all of them are elected. Variants. For multi-seat contests, there can be more than one continuing candidate that satisfies the threshold criterion. If the number of such candidates is not enough to fill all remaining seats, a variant may only allow electing one of those candidates. Otherwise, all continuing candidates that satisfy the threshold criterion are elected. If the restriction of electing only one candidate applies, the candidate with the largest surplus is chosen to be elected. Variant-specific rules for resolving a tie for having the largest surplus may apply. A candidate that satisfies the threshold criterion but is not elected remains a continuing candidate and is still eligible to receive transferred votes from other candidates. 17. All seats filled? This decision step checks whether all seats have been filled by elected candidates. Flows. Process control flows in from Step 16 (Elect candidate(s)). The Yes path to Step 22 (Done) is taken if enough candidates have been elected to fill all seats. The No path to Step 18 (Stage CVRs with surplus votes for winning candidates) is taken if some seats remain unfilled, which can only happen for a multi-seat contest. See also. Step 4 (All seats filled?) checks the corresponding condition for a Marked First-choice Tabulation subprocess. Resources. VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. Explanation. The Yes branch will always be taken for a single-seat election, since before reaching this step at least one candidate has been elected. Variants. None. 18. Stage CVRs with surplus votes for winning candidates This process step stages for reassignment to other candidates selected CVRs that are associated with surplus votes for any candidate that was elected since the most recent tabulation of vote totals in Step 12 (Tabulate vote totals)). 25 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Flows. Process control flows in from the No path from Step 17 (All seats filled?) and flows out to Step 6 (Process a staged CVR). See also. Step 5 (Stage all CVRs) and Step 20 (Defeat candidates with fewest votes and stage their CVRs) also stage CVRs for assignment to a candidate. For the Cambridge variant, processing between this step and Steps 6 - 11 dealing with reassignment of CVRs are more interactive in their flow of control than is depicted in the diagram. Resources. • For each candidate that was elected since the most recent tabulation of vote total in Step 12: • The collection of CVRs currently assigned to that candidate. • VM.RCV.Tabulation.VoteCount, the vote total for that candidate. • VM.RCV.Tabulation.Threshold, the threshold for being elected. • VM.RCV.Tabulation.SurplusTransferMethod, an indication of whether surplus votes may be transferred as a fraction of a vote per CVR and, if so, the details of how to calculate fractional surplus votes, but if not, the details of how CVRs are selected and transferred each with a whole surplus vote. • If fractional surplus votes are used, for each CVR that will be staged: • VM.RCV.Tabulation.CvrVoteValue, the amount of a vote that the CVR currently contributes to the vote total for the candidate to which the CVR is assigned. Explanation. This step will only occur in a multi-seat contest before all seats have been filled by elected candidates. For each qualifying candidate, some or all of the CVRs assigned to the candidate are staged for reassignment. Variants. There are two general methods currently used for handling surplus votes (votes for an elected candidate that are in excess of the threshold): Transfer fractional surplus votes. All CVRs for a candidate are staged and each CVR is given a transfer vote value that is a fraction of a whole vote and which corresponds to the CVR’s share of the elected candidate’s surplus. Typically, a surplus fraction is first calculated for the elected candidate that is equal to the ratio of the elected candidate’s surplus votes divided by the elected candidate’s total votes. The new transfer vote value for a CVR is calculated by multiplying the surplus fraction by the CVR’s previous transfer vote value. CVRs start the tabulation process with a transfer vote value of one whole vote. Variant-specific rules may specify the precision and any rounding (typically rounding down) that is associated with these arithmetic operations. Transfer whole surplus votes. This is the method that Cambridge uses. Each selected CVR is staged counting as a whole vote, but initially only every Nth CVR is staged. The value for N is calculated as the total votes for the elected candidate divided by the number of surplus votes. This method depends on processing the CVRs assigned to a candidate in the same order they were assigned to the candidate. 26 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) In practice, Cambridge processes CVR’s one at a time to be staged, find the most preferred candidate, and assign the CVR to that most preferred continuing candidate, if one exists, all before similar processing is started for the next CVR. If a staged CVR would otherwise become exhausted, the CVR is returned to count for the elected candidate. This incremental processing continues until the number of CVRs successfully transferred to other candidates is equal to the elected candidate’s surplus, or until all of the elected candidate’s CVRs have been subjected to an attempted transfer. If a pass through all of a candidate’s CVRs while attempting to stage every Nth ballot is not sufficient to transfer the candidate’s surplus, another pass that attempts to stage every Nth + 1 ballot is made, then another pass for every Nth + 2 CVR, and so on until the surplus has been transferred or until all CVRs have been subjected to an attempted transfer. 19. # continuing candidates = # unfilled seats This decision step checks if the number of continuing candidates is equal to the number of unfilled seats, in which case they can all be elected to finish the tabulation without additional rounds. Flows. Processing control flows in from the No path from Step 15 (Any candidate votes > T?). The Yes path to Step 21 (Elect all continuing candidates) is taken if the number of continuing candidates is equal to the current number of unfilled seats. The No path to Step 20 (Defeat candidates with fewest votes and stage their CVRs) is taken if there are more continuing candidates than the number of unfilled seats. See also. None. Resources. • VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. • VM.RCV.NumberSeatsToFill, the number of seats to be filled. Explanation. No additional explanation. Variants. None. 20. Defeat candidates with fewest votes and stage their CVRs This processing step defeats one or more candidates with the fewest votes, or any other candidates specially identified by a variant, and stages their CVRs for reassignment to other continuing candidates. Flows. Processing control flows in from the No path from Step 19 (# continuing candidates = # unfilled seats?) and out to Step 6 (Process a staged CVR). 27 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) See also. Step 15 (Candidate votes > T?) also describes special conditions for defeating candidates. Resources. • VM.RCV.Tabulation.VoteCount for all candidates, the most recent vote totals from Step 12 (Tabulate vote totals). • VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. • VM.RCV.Tabulation.Configuration.MultipleDefeats, an indication of whether or under what circumstances more than one candidate is to be defeated in a round. • VM.RCV.Tabulation.Configuration.PriorityDefeats, an indication of whether or under what circumstances one or more candidates are to be defeated regardless of their current vote totals or when there is a continuing candidate that satisfies the threshold criterion or an elected candidate with undistributed surplus. • VM.RCV.Tabulation.Configuration.ResolveTiesForFewestVotes, an indication of how to resolve ties for being the candidate with the fewest votes. • Other variant-specific information that may be needed to determine whether special defeat conditions apply, such as: • VM.RCV.NumberSeatsToFill, the number of seats to be filled. • VM.RCV.Tabulation.IsCandidateUndeclaredWriteIn for all candidates, an indication of whether a candidate is an undeclared write-in candidate. • VM.RCV.Tabulation.TotalBallotSelections for each candidate, the total number of valid ballot selections across all ranking levels for each candidate. • VM.RCV.Tabulation.Threshold, the threshold value. • VM.RCV.Tabulation.ThresholdComparisonType, the type of threshold criterion comparison to use: must exceed the threshold (>) or must reach or exceed the threshold (≥). Explanation. The basic approach is to defeat the candidate with the fewest votes and then transfer that candidate’s votes to other candidates. There can be variant-specific rules for how to resolve a tie between candidates with the fewest votes. Variants. Some variants use some sort of lottery to resolve a tie for having the fewest votes to select which of the tied candidates will be defeated, while others look at previous round results and defeat the candidate with the lowest votes in the most recent previous round that is not tied, using a lottery only if there is still a tie after looking at all previous rounds. It is also common for single-seat contests to allow or require defeating in a single round a group of continuing candidates who individually have fewer votes than any other continuing candidates (a.k.a. batch elimination) if their combined vote total is less than the candidate with the next higher vote total. If a candidate is in the group, any candidate with the same number or fewer votes must also be in the group. Use of this option will not change who is elected, i.e. its use is outcome invariant. San Francisco 28 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) and Oakland rules require use of this option but Oakland does not use it and San Francisco has stopped using it in favor of other tabulation options its voting system supports. For multi-seat elections, the criteria for defeating two or more candidates in a round or defeating a candidate while there are other candidates that satisfy the threshold criterion are more complicated if outcome invariance is to be maintained. Some variants have exceptional rules that prioritize defeating one or more candidates. Minneapolis allows votes to be counted for undeclared write-in candidates in the first round (but doesn’t allow them to be elected) and then requires that any such candidates be defeated before tabulating votes for the second round, regardless of how many votes those candidates have. Minneapolis also requires a candidate to be defeated if the total valid CVR selections across all ranking levels is small enough to ensure that the candidate can not be elected. For multi-seat contests, Minneapolis requires those special defeats and batch eliminations based on single-seat conditions even if there is a continuing candidate that satisfies the threshold criterion. HR 3057 requires certain candidate eliminations, including batch eliminations, even if there are continuing candidates that satisfy the threshold criterion. Cambridge requires defeat, after all surplus is transferred from candidates elected in the first round, of every candidate with fewer than 50 votes. The 50-vote minimum is derived from the requirement to have 50 signatures on a candidate’s nominating petition. None of these exceptional elimination rules is guaranteed to be outcome invariant compared to single elimination only when there is no surplus to be transferred. 21. Elect all continuing candidates This processing step elects all continuing candidates in order to fill the remaining unfilled seats. Flows. Process control flows in from the Yes path from Step 19 (# continuing candidates = # unfilled seats?) and out to Step 22 (Done). See also. None. Resources. VM.RCV.Tabulation.CandidateStatus for all candidates, the status of whether a candidate is a defeated, elected, or continuing candidate. Explanation. This allows a candidate to be elected without satisfying the threshold criterion. Variants. None. 22. Done 29 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) This process termination step indicates that all seats have been filled or all eligible candidates have been elected and that the tabulation process is complete. Flows. Processing control flows in from: • Step 4 (All seats filled?) of the Marked First-choice Tabulation subprocess. • Step 17 (All seats filled?). • Step 21 (Elect all continuing candidates). See also. None. Resources. None. Explanation. No additional explanation. Variants. None. APPENDICES APPENDIX C UML Model Diagrams Note: This appendix will not appear separately within this NIST SP 1500-10X Voting Methods Models section 3.1.4.3 DRAFT as you see here. It is a duplication of the draft NIST SP 1500-10X Voting Methods Models in this document for the convenience of reviewers of this draft who may wish to view the UML diagrams for other NIST specifications that this specification adopts or uses. 30 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Figure 3. NIST SP 1500-102 Cast Vote Record CDF, UML ModelVersion 21. 31 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Figure 4. NIST Election Event Logging CDF Specification, UML Model. 32 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) Figure 5. NIST Election Business Process Model Framework, BPMN Model for the Tally Ballots process. This is the business process model that corresponds to all Tally and Tabulation processes. REFERENCES [1] VM-WG Voting Methods Universe DRAFT https://docs.google.com/spreadsheets/d/e/2PACX-1vT3PJ_- yxauMfKTI2xJq9QDF9i7_AK4NAhQFrinjwUEahvpDunvAWVA- 278eH3K5N3ox18kubCxVz7r/pubhtml [2] Election Business Process Framework https://pages.nist.gov/ElectionModeling/diagrams.html#Process___18_5_1_11940316_150046 7305588_877004_24065 [3] Election Results Reporting CDF Specification NIST 1500-100 http://collaborate.nist.gov/voting/bin/view/Voting/ElectionResultsReporting 33 of 34 Voting Methods Working Group (VMWG) , NIST Interoperability Working Group Modeling Subgroup for Multi-round Voting Tabulation Methods 10/15/2017 -LL Editor DRAFT Authors: H. Deutsch, G. Gilbert, D. Cary, C. Hughes, L. Lochridge (Author & Editor) [4] Cast Vote Record Common Data Format draft VVSG 2.0 requirements document https://github.com/usnistgov/CastVoteRecords/blob/master/CVR-CDF%20requirements%20for %20next%20VVSG.pdf [5] Election Logging CDF Specification 1500-101 https://github.com/usnistgov/ElectionEventLogging [ 6] https://www.eac.gov/assets/1/28/TGDC_Draft_Guidelines.2007.pdf Excerpts copied here only for ease of reference for reviewers (in general we assume compliance with TGDC Guidelines 2007 and assume that whatever updated TGDC Guidelines that are prepared by NIST TGDC and presented for approval to the EAC for VVSG 2.0 will be complied with by adopters of this standard). We will update this standard to align with TGDC VVSG 2.0 recommendations as those recommendations become available. This specification and all of the VM-WG work product is in accordance with PART 1 – CH 7 | Page 271 7.7.2 Voting variations. The following sub-sections of section 7.7.2 Voting variations, in particular, apply to this specification: “7.7.2 Voting variations ...............................................................................................................7-271” for the enumeration of categories of voting methods listed. “7.7.2-A.15 Tabulator, N-of-M voting Tabulators of the N-of-M voting device class SHALL be capable of tabulating votes, overvotes, and undervotes in contests where the voter is allowed to choose up to a specified number of contest choices (N(r) > 1, per Part 1:8.3 “Logic Model (normative)”) from a list of contest choices. Applies to: Tabulator • N-of-M voting device Test Reference: Part 3:5.2 “Functional Testing” Source: Added precision, based on [VSS2002] I.2.2.8.1, I.2.2.8.2 and glossary” [7] DRAFT: NIST SP 1500-10X, Voting Methods Models , A standard for precise specification of elections administration voting methods, counting, tabulation, and mathematical evaluation modules , NIST Interoperability Public Working Group, Voting Methods Subgroup, Draft Version 0.1, 08/03/2017 [ NOTE : the draft for NIST SP 1500-10X, Voting Methods Models is currently primarily an outline as to the sections of the document that contain the voting methods models. This draft RCV process model document is intended to be one of the Section 3 Process model descriptions within NIST SP 1500-10X, Voting Methods Models. [8] http://collaborate.nist.gov/voting/bin/view/Voting/CyberSecurity See Cybersecurity Principles and Cybersecurity Requirements documents 34 of 34 